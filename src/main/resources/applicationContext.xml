<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"



	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 开启包扫描 -->
	<context:component-scan base-package="service"></context:component-scan>

	<!-- 加载db.properties文件,获取数据库的参数 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 加在数据源dataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc_driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc_jdbcUrl}"></property>
		<property name="user" value="${jdbc_user}"></property>
		<property name="password" value="${jdbc_password}"></property>
	</bean>

	<!-- 初始化sessionFactory工厂 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"></property>

		<!-- mybatis-config.xml文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- mapper接口扫描 -->
	<!-- spring为mapper接口创建代理对像 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描mapper下面的包的接口 -->
		<property name="basePackage" value="mapper"></property>
		<!-- 不要使用sqlSessionFacoty,会倒致properties解析失败，该属性现在过期 -->
		<!-- 请使用sqlSessionFactoryBeanName -->
	<property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
	</bean>

	<!-- AOP事务支持 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>

	</bean>

	<!-- 开启注解方式事务Transactional -->
	<!-- 控制service层代理对像产生：false表示JDK动态代理，true表示Cglib动态代理 -->
	<tx:annotation-driven transaction-manager="txManager"
		proxy-target-class="false" />


</beans>